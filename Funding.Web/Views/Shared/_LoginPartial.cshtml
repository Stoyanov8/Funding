@using Microsoft.AspNetCore.Identity
@using Funding.Data.Models

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject IInboxService service

    
@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li class="searchAndProjects">
                <div id="projectsAndSearchNav">                   
                    <a asp-area="" asp-controller="Project" asp-action="MyProjects" class="btn btn-default">My projects</a>
                    <a class="btn btn-info" asp-controller="Project" asp-action="FundedProjects">Funded projects</a>
                </div>
            </li>
            <li class="adminPanel">
                @if (this.User.IsInRole(Roles.Admin))
                {
                    <div>
                        <a asp-area="Admin" asp-controller="Home" asp-action="Index" class="btn btn-default">
                            Admin Panel
                        </a>
                    </div>
                }
            <li />
            <li>


                @if (this.User.IsInRole(Roles.ProjectAdmin))
                {
                    <div>
                        <a asp-area="ProjectAdmin" asp-controller="Projects" asp-action="All" class="btn btn-default">
                            Project Panel
                        </a>
                    </div>
                }
            </li>
            <li>
                <div id="mailIcon">
                    <a asp-controller="Inbox" asp-action="All">
                        <div id="messagesCount"><img border="0" alt="mail" src="~/images/mailbox.png" width="50" height="60"> @await service.GetUnreadMessages(this.User.Identity.Name) </div>
                                           
                    </a>

                   
                </div>
            </li>
            <li>
                <button id="logout" type="submit" class="btn btn-link navbar-btn navbar-link">Log out</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">        li
        <li><a id="register" asp-area="" asp-controller="Account" asp-action="Register">Join us!</a></li>
        <li><a id="login" asp-area="" asp-controller="Account" asp-action="Login" class="login">Log in</a></li>
    </ul>
}

@section Scripts{
    <script>
        var transportType = signalR.transportType.WebSockets;
        var logger = new signalR.ConsoleLogger(signalR.LogLevel.Information);
        var hub = new signalR.HttpConnection(`http://${document.location.host}`, { transport: transportType, logger: logger });
        var connection = new signalR.HubConnnection(hub, logger);


        connection.on('Notification'(@this.User.Identity.Name) => {
            document.getElementById('messages').innerHTML = '<div>' + @this.User.Identity.Name+ '</div>';
        });

            function notification(){

                connection.invoke('Notification',@this.User.Identity.Name);
        };
    </script>
}